// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/string-split-grapheme-clusters@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string-array@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/string-replace@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-escape-regexp-string@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";var a=e.isPrimitive,d=s,g=t.isPrimitive,o=r.primitives,l=i,p=n,h=m;var j=function(e,s,t){var r,i,n,m,j;if(!a(e))throw new TypeError(h("invalid argument. First argument must be a string. Value: `%s`.",e));if(!g(s))throw new TypeError(h("invalid argument. Second argument must be a nonnegative integer. Value: `%s`.",s));if(arguments.length>2){if(!(n=a(t))&&!o(t))throw new TypeError(h("invalid argument. Third argument must be a string or an array of strings. Value: `%s`.",t));for(n&&(t=d(t)),r=t.length-1,i="",j=0;j<r;j++)i+=p(t[j]),i+="|";i+=p(t[r]),m=new RegExp("^(?:"+i+"){0,"+s+"}")}else m=new RegExp("^[ \f\n\r\t\v   - \u2028\u2029  　\ufeff]{0,"+s+"}");return l(e,m,"")};export{j as default};
//# sourceMappingURL=index.mjs.map
