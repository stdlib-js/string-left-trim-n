{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport splitGraphemeClusters from '@stdlib/string-split-grapheme-clusters';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer';\nimport { primitives as isStringArray } from '@stdlib/assert-is-string-array';\nimport replace from '@stdlib/string-replace';\nimport rescape from '@stdlib/utils-escape-regexp-string';\nimport format from '@stdlib/string-format';\n\n\n// VARIABLES //\n\nvar WHITESPACE_CHARS = '\\u0020\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\n\n\n// MAIN //\n\n/**\n* Trims `n` characters from the beginning of a string.\n*\n* @param {string} str - input string\n* @param {NonNegativeInteger} n - number of characters to trim\n* @param {(string|StringArray)} [chars] - characters to trim (defaults to whitespace characters)\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a string or an array of strings\n* @returns {string} trimmed string\n*\n* @example\n* var str = '   abc   ';\n* var out = ltrimN( str, 2 );\n* // returns ' abc   '\n*\n* @example\n* var str = '   abc   ';\n* var out = ltrimN( str, str.length );\n* // returns 'abc   '\n*\n* @example\n* var str = '~~abc!~~';\n* var out = ltrimN( str, str.length, [ '~', '!' ] );\n* // returns 'abc!~~'\n*\n* @example\n* var str = '🤖👨🏼‍🎨🤖👨🏼‍🎨🤖👨🏼‍🎨';\n* var out = ltrimN( str, str.length, '👨🏼‍🎨🤖' );\n* // returns ''\n*/\nfunction ltrimN( str, n, chars ) {\n\tvar nElems;\n\tvar reStr;\n\tvar isStr;\n\tvar RE;\n\tvar i;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isNonNegativeInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', n ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tisStr = isString( chars );\n\t\tif ( !isStr && !isStringArray( chars ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a string or an array of strings. Value: `%s`.', chars ) );\n\t\t}\n\t\tif ( isStr ) {\n\t\t\tchars = splitGraphemeClusters( chars );\n\t\t}\n\t\tnElems = chars.length - 1;\n\t\treStr = '';\n\t\tfor ( i = 0; i < nElems; i++ ) {\n\t\t\treStr += rescape( chars[ i ] );\n\t\t\treStr += '|';\n\t\t}\n\t\treStr += rescape( chars[ nElems ] );\n\n\t\t// Case: Trim a specific set of characters from the beginning of a string..\n\t\tRE = new RegExp( '^(?:' + reStr + '){0,'+n+'}' );\n\t} else {\n\t\t// Case: Trim `n` whitespace characters from the beginning of a string...\n\t\tRE = new RegExp( '^[' + WHITESPACE_CHARS + ']{0,'+n+'}' );\n\t}\n\treturn replace( str, RE, '' );\n}\n\n\n// EXPORTS //\n\nexport default ltrimN;\n"],"names":["ltrimN","str","n","chars","nElems","reStr","isStr","RE","i","isString","TypeError","format","isNonNegativeInteger","arguments","length","isStringArray","splitGraphemeClusters","rescape","RegExp","replace"],"mappings":";;+sBAqEA,SAASA,EAAQC,EAAKC,EAAGC,GACxB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACJ,IAAMC,EAAUR,GACf,MAAM,IAAIS,UAAWC,EAAQ,kEAAmEV,IAEjG,IAAMW,EAAsBV,GAC3B,MAAM,IAAIQ,UAAWC,EAAQ,gFAAiFT,IAE/G,GAAKW,UAAUC,OAAS,EAAI,CAE3B,KADAR,EAAQG,EAAUN,MACFY,EAAeZ,GAC9B,MAAM,IAAIO,UAAWC,EAAQ,yFAA0FR,IAOxH,IALKG,IACJH,EAAQa,EAAuBb,IAEhCC,EAASD,EAAMW,OAAS,EACxBT,EAAQ,GACFG,EAAI,EAAGA,EAAIJ,EAAQI,IACxBH,GAASY,EAASd,EAAOK,IACzBH,GAAS,IAEVA,GAASY,EAASd,EAAOC,IAGzBG,EAAK,IAAIW,OAAQ,OAASb,EAAQ,OAAOH,EAAE,IAC7C,MAEEK,EAAK,IAAIW,OAAQ,8CAAiChB,EAAE,KAErD,OAAOiB,EAASlB,EAAKM,EAAI,GAC1B"}